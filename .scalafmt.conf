# https://scalameta.org/scalafmt/docs/configuration.html

version = 3.1.2

runner.dialect = "scala212"

maxColumn = 100

fileOverride {
    "glob:**/{*.sbt,project/Dependencies.scala}" {
        align.tokens = [
            {
                code = "=>"
                owners = [{regex = "Case"}]
            },
            {
                code = "="
                owners = [{regex = "Defn"}]
            },
            {
                code = "%"
                owners = [{regex = "Term\\.ApplyInfix"}]
            },
            {
                code = "%%"
                owners = [{regex = "Term\\.ApplyInfix"}]
            },
        ]
  }
}

indent {
    main = 2
    callSite = 2
    defnSite = 2
    caseSite = 5
    extendSite = 4
    withSiteRelativeToExtends = 3
    commaSiteRelativeToExtends = 8
    extraBeforeOpenParenDefnSite = 2
}

indentOperator {
    topLevelOnly = true
    excludeRegex = """^(&&|\|\|)$"""
    includeRegex = """^.*$"""
}

align {
    tokens = [
        {
            code = "=>"
            owners = [{regex = "Case"}]
        },
        {
            code = "->"
            owners = [{regex = "Term\\.ApplyInfix"}]
        },
    ]
    arrowEnumeratorGenerator = true
    closeParenSite = false
    openParenCallSite = false
    openParenCtrlSite = false
    openParenDefnSite = false
    allowOverflow = false
    multiline = false
}

newlines {
    source = keep
    topLevelStatementBlankLines = [
        {
            blanks = 1
        }
    ]
    beforeTemplateBodyIfBreakInParentCtors = true
    beforeMultiline = keep
    forceBeforeMultilineAssign = never
    beforeTypeBounds = keep
    alwaysBeforeElseAfterCurlyIf = true
    beforeCurlyLambdaParams = never
    afterCurlyLambdaParams = keep
    implicitParamListModifierPrefer = after
    afterInfix = some
    avoidForSimpleOverflow = [tooLong, slc]
    avoidInResultType = true
    sometimesBeforeColonInMethodReturnType = true
    beforeOpenParenDefnSite = null
    selectChains = unfold
}

danglingParentheses {
    defnSite = true
    callSite = true
    ctrlSite = true
}

rewrite {
    rules = [RedundantParens, SortModifiers, Imports]
    imports {
        expand = false
        sort = original
    }
    trailingCommas {
        style = multiple
        allowFolding = true
    }
    sortModifiers.order = [
      "private",
      "protected",
      "override",
      "final",
      "lazy",
      "implicit",
      "sealed",
      "abstract",
    ]
}

verticalMultiline {
    arityThreshold = 100
    newlineAfterOpenParen = true
}

docstrings {
    style = Asterisk
    removeEmpty = true
    oneline = unfold
    wrap = no
#     wrapMaxColumn = 100
#     blankFirstLine = yes
}

spaces {
    beforeContextBoundColon = Always
    inImportCurlyBraces = false
    inInterpolatedStringCurlyBraces = false
    inParentheses = false
    afterKeywordBeforeParen = true
    inByNameTypes = true
    afterSymbolicDefs = true
}

literals {
    long = Upper
    float = Lower
    double = Lower
    hexPrefix = Lower
    hexDigits = Lower
    scientific = Lower
}

# includeCurlyBraceInSelectChains = true
# includeNoParensInSelectChains = true

optIn {
#     breakChainOnFirstMethodDot = false
#     breaksInsideChains = false
#     encloseClassicChains = false
    configStyleArguments = true
    forceBlankLineBeforeDocstring = true
}
